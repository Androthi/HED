/*
	Extracted Windows header
	This file created by wscan v3.0
	by Sevag Krikorian, released to public domain.

	This file is machine generated.
Include it into programs and units that were scanned
	If after using the program, you get missing symbol
	errors (this should be very rare, and is provided in
	case I missed somthing in the scanner), use the macro
	to fill in the missing symbols, save and run the scanner
	again
	Example of macro usage:
	 wininc ( w.TV_ITEMEX );
*/

#macro wininc ( __winargs__[]);
#endmacro

namespace w; @fast;
type
NMHDR: 
		record
			hwndFrom: 	dword;
			idFrom: 	dword;
			code: 		dword;
		endrecord;

NMTTDISPINFO: 
 		record
			hdr: 		NMHDR;
			lpszText: 	dword;
			szText: 	byte[80];
			hInst: 		dword;
			uFlags: 	dword;
			lParam: 	dword;
		endrecord;

TOOLTIPTEXT :NMTTDISPINFO;
TV_HITTESTINFO: 
 		record
			pt: 	POINT;
			flags: 	dword;
			hItem: 	dword;
		endrecord;

PRINTDLG: 
 		record
			lStructSize:				dword;
			hWndOwner:					dword;
			hDevMode: 					dword;
			hDevNames: 					dword;
			hDC: 						dword;
			Flags: 						dword;
			nFromPage: 					word;


			nToPage: 					word;
			nMinPage: 					word;
			nMaxPage: 					word;
			nCopies: 					word;
			hInstance: 					dword;
			lCustData: 					dword;
			lpfnPrintHook: 				dword;
			lpfnSetupHook: 				dword;
			lpPrintTemplateName:		dword;
			lpPrintSetupTemplateName:	dword;
			hPrintTemplate: 			dword;
			hSetupTemplate: 			dword;
		endrecord;

SECURITY_ATTRIBUTES: 
 		record
			niLength: 				dword;
			lpSecurityDescriptor: 	dword;
			bInheritHandle: 		dword;
		endrecord;

PROCESS_INFORMATION: 
 		record
			hProcess: 		dword;
			hThread: 		dword;
			dwProcessId: 	dword;
			dwThreadId: 	dword;
		endrecord;

STARTUPINFO: 
 		record
			cb: 				dword;
			lpReserved: 		dword;
			lpDesktop: 			dword;
			lpTitle: 			dword;
			dwX: 				dword;
			dwY: 				dword;
			dwXSize: 			dword;
			dwYSize: 			dword;
			dwXCountChars: 		dword;
			dwYCountChars: 		dword;
			dwFillAttribute: 	dword;
			dwFlags: 			dword;
			wShowWindow: 		word;
			cbReserved2: 		word;
			lpReserved2: 		dword;
			hStdInput: 			dword;
			hStdOutput: 		dword;
			hStdError: 			dword;
		endrecord;

const
	MAX_PATH := 260;
type
TEXTMETRIC: 
 		record
			tmHeight: 			dword;
			tmAscent: 			dword;
			tmDescent: 			dword;
			tmInternalLeading: 	dword;
			tmExternalLeading: 	dword;
			tmAveCharWidth: 	dword;
			tmMaxCharWidth: 	dword;
			tmWeight: 			dword;
			tmOverhang: 		dword;
			tmDigitizedAspectX: dword;
			tmDigitizedAspectY: dword;
			tmFirstChar: 		byte;
			tmLastChar: 		byte;
			tmDefaultChar: 		byte;
			tmBreakChar: 		byte;
			tmItalic: 			byte;
			tmUnderlined: 		byte;
			tmStruckOut: 		byte;
			tmPitchAndFamily: 	byte;
			tmCharSet: 			byte;
		endrecord;

LOGFONT: 
 		record
			lfHeight: 			dword;
			lfWidth: 			dword;
			lfEscapement: 		dword;
			lfOrientation: 		dword;
			lfWeight: 			dword;
			lfItalic: 			byte;
			lfUnderline: 		byte;
			lfStrikeOut: 		byte;
			lfCharSet: 			byte;
			lfOutPrecision: 	byte;
			lfClipPrecision: 	byte;
			lfQuality: 			byte;
			lfPitchAndFamily: 	byte;
			lfFaceName: 		byte[LF_FACESIZE];
		endrecord;

const
	DOCINFO: 
 		record
			cbSize: 		dword;
type
PAGESETUPDLG: record
		lStructSize: dword;
		hwndOwner: dword;
		hDevMode: dword;
		hDevNames: dword;
		flags: dword;
		ptPaperSize: POINT;
		rtMinMargin: RECT;
		rtMargin: RECT;
		hInstance: dword;
		lCustData: dword;
		lpfnPageSetupHook: dword;
		lpfnPagePaintHook: dword;
		lpPageSetupTemplateName: dword;
		hPageSetupTemplate: dword;
		align(4);
		endrecord;

const
	WC_TABCONTROL   :string     := "SysTabControl32";


end w;
