unit explorer;
	
	#includeonce ("HED.hhf")
	#includeonce ("filesys.hhf")	
	
	?@nodisplay:=true;
	?@align:=4;


storage	// internal variables
	align(4);
	sbuffer			:string;
	selMem			:pointer to fList.fnode;

	tvins	:w.TV_INSERTSTRUCT;
	tvhtst	:w.TV_HITTESTINFO;
	tvi		:w.TV_ITEM;
	pt		:hide.point_t;
	treebuffer	:byte[w.MAX_PATH];
	align(4);

procedure Explorer_AddNode(hparent:dword; item:string); @returns("EAX");
begin Explorer_AddNode;
	push (edx);
	mov (hparent, tvins.hParent);
	mov (w.TVIF_TEXT | w.TVIF_PARAM,tvins.item.imask);
	filesys.a_getFullPathName (item);
	mov (eax, tvins.item.lParam);
	mov (item, tvins.item.pszText);
	w.SendMessage (core.hexplorertree, w.TVM_INSERTITEM, 0, &tvins);
	pop (edx);
end Explorer_AddNode;

procedure Explorer_ReadFiles(hparent:dword);
	var
		itemstr		:string;
		curdir		:string;
		curhandle	:dword;
		
begin Explorer_ReadFiles;
	mov(str.talloc(500), curdir);
	foreach filesys.itemInCwd() do
		
		mov(eax, itemstr);
		filesys.gwd(curdir);

		if(filesys.isDir(itemstr)) then
			Explorer_AddNode (hparent, itemstr);
			//dbg.put("dir :", itemstr);
			push (eax);
			filesys.cd(itemstr);
			pop (eax);
			Explorer_ReadFiles (eax);
			filesys.cd(curdir);
		elseif(filesys.isFile(itemstr)) then
			//dbg.put("file :", itemstr);
			Explorer_AddNode(hparent, itemstr);

		endif;
		str.free(itemstr);
	endfor;
end Explorer_ReadFiles;

procedure Explorer_LoadFolder(folder:string);
begin Explorer_LoadFolder;
	filesys.cd (folder);
	w.SendMessage(core.hexplorertree,w.TVM_DELETEITEM,0,w.TVI_ROOT);
	Explorer_ReadFiles (NULL);
end Explorer_LoadFolder;

procedure Proc_Explorer (lparam:dword; wparam:dword; umsg:uns32; hwin:dword);

begin	Proc_Explorer;


	mov(umsg,eax);
	cmp(eax,w.WM_NOTIFY);
	je _notify;
	cmp(eax,w.WM_COMMAND);
	je _command;
	cmp(eax,w.WM_SIZE);
	je _size;
	cmp(eax,w.WM_CLOSE);
	je _close;
	cmp(eax,w.WM_MOUSEACTIVATE);
	je _activate;
	cmp(eax,w.WM_INITDIALOG);
	je _init;
	cmp(eax,w.WM_DESTROY);
	je _destroy;
	jmp xProc_Explorer;
		
	_command:	
			mov(wparam,eax);
			mov(eax,edx);
			shr(16,edx);
			and($0ffff,eax);
			
			jmp xProc_Explorer;
		
	_notify:	
			cmp(wparam,ID_EXPLORER_TREE);
			jne xProc_Explorer;
			mov(lparam,edx);
			mov((type w.NM_TREEVIEW [edx]).hdr.code,eax);
			cmp(eax,w.NM_DBLCLK);
			je _leftdoubleclick;
			cmp(eax,w.TVN_SELCHANGEDA);
			je _selchanged;
			cmp(eax,w.NM_RCLICK);
			je _rightclick;
			
			jmp xProc_Explorer;
		
		_leftdoubleclick:
				dbg.put("opening :", sbuffer);
				if (filesys.isFile (sbuffer)) then
					hed_openFile (sbuffer);
				endif;
				w.PostMessage(core.hwnd, w.WM_SETFOCUS, 0, 0);
				jmp xProc_Explorer;

		_selchanged:
			call _GetItem;
			mov ((type w.TV_ITEM [edx]).lParam, eax);
			mov (eax, sbuffer);
			dbg.put ("sel changed, ", sbuffer);
			jmp xProc_Explorer;
		
		_rightclick:
				jmp xProc_Explorer;
		
	_size:
		w.GetClientRect(hwin, &rect);
		mov	(rect.bottom,eax);
		sub	(rect.top,eax);
		w.MoveWindow(core.hexplorertree,0,rect.top,rect.right,eax,true);
		call _savepos;
		w.InvalidateRect(core.hexplorertree,NULL,true);
		jmp xProc_Explorer;

	_init:
		pushabi;
		mov (hwin, eax);
		mov (eax, core.hexplorer);
		w.SetParent(core.hexplorer,core.hwnd);
		w.GetDlgItem(hwin,ID_EXPLORER_TREE);
		mov(eax,core.hexplorertree);
		popabi;
		jmp xProc_Explorer;

	_activate:
			w.SetForegroundWindow(core.hwnd);
			jmp xProc_Explorer;
		
	_destroy:
			call _savepos;
			jmp xProc_Explorer;
		
	_close:	
		call _savepos;
		
		
xProc_Explorer:
		xor(EAX,EAX);
		exit Proc_Explorer;
		
// internal procedures
_GetItem:
		lea(edx,(type w.NM_TREEVIEW [edx]).itemNew);
		mov(w.TVIF_PARAM | w.TVIF_TEXT,(type w.TV_ITEM [edx]).imask);
		lea(eax,treebuffer);
		mov(eax,(type w.TV_ITEM[edx]).pszText);
		mov(@size(buffer),(type w.TV_ITEM [edx]).cchTextMax);
		push(edx);
		w.SendMessage(core.hexplorertree,w.TVM_GETITEM,0,edx);
		pop(edx);
		mov ( (type w.TV_ITEM[EDX]).lParam, eax );
		dbg.put ("got item :", eax);
		ret();

_savepos:

		w.GetWindowRect(hwin,&rect);
		mov(rect.left,settings.explorerwin.x);
		mov(rect.top,settings.explorerwin.y);
		mov(rect.right,eax);
		sub(rect.left,eax);
		mov(eax,settings.explorerwin.wt);
		mov(rect.bottom,eax);
		sub(rect.top,eax);
		mov(eax,settings.explorerwin.ht);
		ret();
	
_retsavepos:
	ret();

end Proc_Explorer;

end explorer;
